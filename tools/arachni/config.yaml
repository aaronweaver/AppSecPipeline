arachni:
  version: AppSecPipeline 0.5.0
  tags:
    - "Dyanmic Scanner"
  type: "dynamic"
  scan_type: "web"
  name: "arachni"
  icon-sm:
  icon-lg:
  description: "Arachni is a feature-full, modular, high-performance Ruby framework aimed towards helping penetration testers and administrators evaluate the security of modern web applications."
  url: http://www.arachni-scanner.com/
  documentation: https://github.com/Arachni/arachni/wiki/Command-line-user-interface
  docker: "appsecpipeline/base-tools"
  parameters:
   - "URL"
   - "LOGIN_URL"
   - "LOGIN_PARMS"
   - "LOGIN_SUCCESS"
   - "LOGIN_LOGOUT_PATTERN"
  commands:
    pre:
    exec: "arachni $URL"
    shell: True
    report: "--report-save-path={reportname}"
    reportname: "{timestamp}.afr"
    post: "arachni_reporter {reportname} --reporter=json:outfile={reportname}.json"
    junit:
  credentials:
    simple: --plugin=autologin:url=$LOGIN_URL,parameters="$LOGIN_PARMS",check="$LOGIN_SUCCESS" --scope-exclude-pattern=$LOGIN_LOGOUT_PATTERN
  profiles:
    all: ""
    active: "--checks=active/*"
    passive: "--checks=passive/*"
    fast: "--audit-forms --checks=xss --scope-page-limit=1"
    file_upload: "--checks=form_upload"
    xss: "--checks=xss"
    remote: "--checks=file_inclusion"
    command_exec: "--checks=os_cmd_injection"
    sqli: "--checks=sql_injection"
