<?xml version="1.0" ?>
<testsuite failures="74" name="DefectDojo" tests="74">
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="blacklist Severity: Info">
		<failure>Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called. Filename: /var/jenkins_home/workspace/groovy/PyBitBucket.py Line number: 6 Line range: [6, 7, 8, 9] Issue Confidence: HIGH</failure>
	</testcase>
	<testcase name="IP address found in the 'server' header. Severity: Low">
		<failure>IP address found in the 'server' header. The IP is &quot;1.11.2.1&quot;.</failure>
	</testcase>
	<testcase name="IP address found in the 'server' header. Severity: Low">
		<failure>IP address found in the 'server' header. The IP is &quot;1.11.2.1&quot;.</failure>
	</testcase>
	<testcase name="The anti-clickjacking X-Frame-Options header is not present. Severity: Low">
		<failure>The anti-clickjacking X-Frame-Options header is not present.</failure>
	</testcase>
	<testcase name="The anti-clickjacking X-Frame-Options header is not present. Severity: Low">
		<failure>The anti-clickjacking X-Frame-Options header is not present.</failure>
	</testcase>
	<testcase name="The X-Content-Type-Options header is not set. Severity: Low">
		<failure>The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type</failure>
	</testcase>
	<testcase name="The X-Content-Type-Options header is not set. Severity: Low">
		<failure>The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type</failure>
	</testcase>
	<testcase name="The X-XSS-Protection header is not defined. Severity: Low">
		<failure>The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</failure>
	</testcase>
	<testcase name="The X-XSS-Protection header is not defined. Severity: Low">
		<failure>The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</failure>
	</testcase>
	<testcase name="Cross-Site Scripting (XSS) (3658678253) Severity: High">
		<failure>Client-side scripts are used extensively by modern web applications. They
perform from simple functions (such as the formatting of text) up to full
manipulation of client-side data and Operating System interaction. Cross Site
Scripting (XSS) allows clients to inject scripts into a request and have the
server return the script to the client in the response. This occurs because
the application is taking untrusted data (in this example, from the client)
and reusing it without performing any validation or sanitisation. If the
injected script is returned immediately this is known as reflected XSS. If the
injected script is stored by the server and returned to any client visiting
the affected page, then this is known as persistent XSS (also stored XSS).
Arachni has discovered that it is possible to insert script content directly
into HTML element content.



</failure>
	</testcase>
	<testcase name="Cross-Site Scripting (XSS) (3658678253) Severity: High">
		<failure>Client-side scripts are used extensively by modern web applications. They
perform from simple functions (such as the formatting of text) up to full
manipulation of client-side data and Operating System interaction. Cross Site
Scripting (XSS) allows clients to inject scripts into a request and have the
server return the script to the client in the response. This occurs because
the application is taking untrusted data (in this example, from the client)
and reusing it without performing any validation or sanitisation. If the
injected script is returned immediately this is known as reflected XSS. If the
injected script is stored by the server and returned to any client visiting
the affected page, then this is known as persistent XSS (also stored XSS).
Arachni has discovered that it is possible to insert script content directly
into HTML element content.



</failure>
	</testcase>
	<testcase name="Cross-Site Scripting (XSS) (3658678253) Severity: High">
		<failure>Client-side scripts are used extensively by modern web applications. They
perform from simple functions (such as the formatting of text) up to full
manipulation of client-side data and Operating System interaction. Cross Site
Scripting (XSS) allows clients to inject scripts into a request and have the
server return the script to the client in the response. This occurs because
the application is taking untrusted data (in this example, from the client)
and reusing it without performing any validation or sanitisation. If the
injected script is returned immediately this is known as reflected XSS. If the
injected script is stored by the server and returned to any client visiting
the affected page, then this is known as persistent XSS (also stored XSS).
Arachni has discovered that it is possible to insert script content directly
into HTML element content.



</failure>
	</testcase>
	<testcase name="Cross-Site Scripting (XSS) (3658678253) Severity: High">
		<failure>Client-side scripts are used extensively by modern web applications. They
perform from simple functions (such as the formatting of text) up to full
manipulation of client-side data and Operating System interaction. Cross Site
Scripting (XSS) allows clients to inject scripts into a request and have the
server return the script to the client in the response. This occurs because
the application is taking untrusted data (in this example, from the client)
and reusing it without performing any validation or sanitisation. If the
injected script is returned immediately this is known as reflected XSS. If the
injected script is stored by the server and returned to any client visiting
the affected page, then this is known as persistent XSS (also stored XSS).
Arachni has discovered that it is possible to insert script content directly
into HTML element content.



</failure>
	</testcase>
	<testcase name="Cross-Site Scripting (XSS) (3658678253) Severity: High">
		<failure>Client-side scripts are used extensively by modern web applications. They
perform from simple functions (such as the formatting of text) up to full
manipulation of client-side data and Operating System interaction. Cross Site
Scripting (XSS) allows clients to inject scripts into a request and have the
server return the script to the client in the response. This occurs because
the application is taking untrusted data (in this example, from the client)
and reusing it without performing any validation or sanitisation. If the
injected script is returned immediately this is known as reflected XSS. If the
injected script is stored by the server and returned to any client visiting
the affected page, then this is known as persistent XSS (also stored XSS).
Arachni has discovered that it is possible to insert script content directly
into HTML element content.



</failure>
	</testcase>
	<testcase name="Cross-Site Scripting (XSS) (3658678253) Severity: High">
		<failure>Client-side scripts are used extensively by modern web applications. They
perform from simple functions (such as the formatting of text) up to full
manipulation of client-side data and Operating System interaction. Cross Site
Scripting (XSS) allows clients to inject scripts into a request and have the
server return the script to the client in the response. This occurs because
the application is taking untrusted data (in this example, from the client)
and reusing it without performing any validation or sanitisation. If the
injected script is returned immediately this is known as reflected XSS. If the
injected script is stored by the server and returned to any client visiting
the affected page, then this is known as persistent XSS (also stored XSS).
Arachni has discovered that it is possible to insert script content directly
into HTML element content.



</failure>
	</testcase>
	<testcase name="Cross-Site Scripting (XSS) (3658678253) Severity: High">
		<failure>Client-side scripts are used extensively by modern web applications. They
perform from simple functions (such as the formatting of text) up to full
manipulation of client-side data and Operating System interaction. Cross Site
Scripting (XSS) allows clients to inject scripts into a request and have the
server return the script to the client in the response. This occurs because
the application is taking untrusted data (in this example, from the client)
and reusing it without performing any validation or sanitisation. If the
injected script is returned immediately this is known as reflected XSS. If the
injected script is stored by the server and returned to any client visiting
the affected page, then this is known as persistent XSS (also stored XSS).
Arachni has discovered that it is possible to insert script content directly
into HTML element content.



</failure>
	</testcase>
	<testcase name="Cross-Site Scripting (XSS) (3658678253) Severity: High">
		<failure>Client-side scripts are used extensively by modern web applications. They
perform from simple functions (such as the formatting of text) up to full
manipulation of client-side data and Operating System interaction. Cross Site
Scripting (XSS) allows clients to inject scripts into a request and have the
server return the script to the client in the response. This occurs because
the application is taking untrusted data (in this example, from the client)
and reusing it without performing any validation or sanitisation. If the
injected script is returned immediately this is known as reflected XSS. If the
injected script is stored by the server and returned to any client visiting
the affected page, then this is known as persistent XSS (also stored XSS).
Arachni has discovered that it is possible to insert script content directly
into HTML element content.



</failure>
	</testcase>
	<testcase name="Cross-Site Scripting (XSS) (3658678253) Severity: High">
		<failure>Client-side scripts are used extensively by modern web applications. They
perform from simple functions (such as the formatting of text) up to full
manipulation of client-side data and Operating System interaction. Cross Site
Scripting (XSS) allows clients to inject scripts into a request and have the
server return the script to the client in the response. This occurs because
the application is taking untrusted data (in this example, from the client)
and reusing it without performing any validation or sanitisation. If the
injected script is returned immediately this is known as reflected XSS. If the
injected script is stored by the server and returned to any client visiting
the affected page, then this is known as persistent XSS (also stored XSS).
Arachni has discovered that it is possible to insert script content directly
into HTML element content.



</failure>
	</testcase>
	<testcase name="Cross-Site Scripting (XSS) (3658678253) Severity: High">
		<failure>Client-side scripts are used extensively by modern web applications. They
perform from simple functions (such as the formatting of text) up to full
manipulation of client-side data and Operating System interaction. Cross Site
Scripting (XSS) allows clients to inject scripts into a request and have the
server return the script to the client in the response. This occurs because
the application is taking untrusted data (in this example, from the client)
and reusing it without performing any validation or sanitisation. If the
injected script is returned immediately this is known as reflected XSS. If the
injected script is stored by the server and returned to any client visiting
the affected page, then this is known as persistent XSS (also stored XSS).
Arachni has discovered that it is possible to insert script content directly
into HTML element content.



</failure>
	</testcase>
</testsuite>
